apiVersion: v1
kind: ServiceAccount
metadata:
  name: elasticsearch
  namespace: efk
  labels:
    k8s-app: elasticsearch
    addonmanager.kubernetes.io/mode: Reconcile
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: elasticsearch
  labels:
    k8s-app: elasticsearch
    addonmanager.kubernetes.io/mode: Reconcile
rules:
- apiGroups:
  - ""
  resources:
  - "services"
  - "namespaces"
  - "endpoints"
  verbs:
  - "get"
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: efk
  name: elasticsearch
  labels:
    k8s-app: elasticsearch
    addonmanager.kubernetes.io/mode: Reconcile
subjects:
- kind: ServiceAccount
  name: elasticsearch
  namespace: efk
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: elasticsearch
  apiGroup: ""
---
# Elasticsearch deployment itself
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: efk
  labels:
    k8s-app: elasticsearch
    version: v6.5.4
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  serviceName: elasticsearch
  replicas: 2
  selector:
    matchLabels:
      k8s-app: elasticsearch
      version: v6.5.4
  template:
    metadata:
      labels:
        k8s-app: elasticsearch
        version: v6.5.4
    spec:
      initContainers:
        - name: init-systl
          image: busybox:1.27.2
          command:
          - sysctl
          - -w
          - vm.max_map_count=262144
          securityContext:
              privileged: true
      serviceAccountName: elasticsearch
      containers:
      - image: docker.elastic.co/elasticsearch/elasticsearch:6.5.4
        name: elasticsearch
        imagePullPolicy: Always
        resources:
          # need more cpu upon initialization, therefore burstable class
          limits:
            cpu: 1000m
            memory: 5Gi
          requests:
            cpu: 100m
            memory: 5Gi
        ports:
        - containerPort: 9200
          name: db
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: 5
          timeoutSeconds: 10
        readinessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: 5
          timeoutSeconds: 10
        #volumeMounts:
        #- name: elasticsearch
        #  mountPath: /data
        env:
        - name: CLUSTER_NAME
          value: elasticsearch
        - name: "NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
       # - name: bootstrap.memory_lock
        #  value: "true"
        - name: ES_JAVA_OPTS
          value: "-Xms4g -Xmx4g"
        - name: LimitMEMLOCK
          value: "infinity"
        - name: "NETWORK_HOST"
          value: "_local:ipv4_" 
        - name: NODE_MASTER
          value: "false"
        - name: NODE_INGEST
          value: "false"
        - name: HTTP_ENABLE
          value: "true"
        volumeMounts:
        - name: elasticsearch
          mountPath: /var/elasticsearch
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
      terminationGracePeriodSeconds: 30
      volumes:
      - name: elasticsearch
        persistentVolumeClaim:
            claimName: efk-vol
        #hostPath:
         # path: /var/elasticsearch
      - name: varlibdockercontainers
        persistentVolumeClaim:
            claimName: efk
        #hostPath:
         # path: /var/lib/docker/containers
     # volumes:
      #- name: elasticsearch
      #  emptyDir: {}
      # Elasticsearch requires vm.max_map_count to be at least 262144.
      # If your OS already sets up this number to a higher value, feel free
      # to remove this init container.

  
---

apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: efk
  labels:
    k8s-app: elasticsearch
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "Elasticsearch"
spec:
  type: NodePort
  ports:
  - port: 9200
    protocol: TCP
    targetPort: 9200
  selector:
    k8s-app: elasticsearch